

package starbucks ;

/** Passcode Screen Component */
public class MyCardNumber implements ITouchEventHandler, IDisplayComponent, IKeyPadObserver
{
    ITouchEventHandler nextHandler ;
    private int count = 0;
    private int focus = 1; // default focus is CardNumber
    private String cardNumber = "";     
    private int MAX_LENGTH = 9;

    /**
     * Touch Event Ignored by Passcode
     * @param x Touch X
     * @param y Touch Y
     */
    public void touch(int x, int y) 
    {
        if ( x >= 1 && x <= 3 && y == 2 )
        {
            focus = 1; 
        }
        
        if (x == 2 && y == 3)
        {
             focus = 0;
        }
        
        if ( nextHandler != null )
            nextHandler.touch(x,y);
    }
    
    /**
     * Set Next Touch Handler
     * @param next Touch Event Handler
     */
    public void setNext( ITouchEventHandler next) 
    { 
        nextHandler = next ;
    }
    
    
    /**
     * Display "Echo Feedback" on Pins enterred so far
     * @return Passcode String for Display
     */
	public String display() 
	{
		String value = "[" + cardNumber + "]";
		return value;
	}
    
    /**
     * Add Sub Component (Not used)
     * @param c Sub Component to Add
     */
    public void addSubComponent( IDisplayComponent c ) 
    {
        
    }   
    
    /**
     * Key Event Update
     * Setting count and cardNumber
     * @param c  Count of Keys So Far
     * @param key Last key Pressed
     */
    public void keyEventUpdate( int c, String key ) 
    {
        System.err.println( "Key: " + key ) ;
               
        if(focus == 1)
        {
            if(key.equals(" "))
            {
            	// do nothing
            }
            else if(key.equals("X"))
            { 	
            	if(count > 0)
            	{
            		count = count-1;
            		cardNumber = cardNumber.substring(0, cardNumber.length()-1);
            	}            	
            }
            else
            {
            	if(count < MAX_LENGTH)
            	{
            		count = count +1;
            		cardNumber = cardNumber + key;
            	}            	
            }        	
        }                   
    }
    
    public String getCardNumber()
    {
    	return cardNumber;
    }
    
    /**
     * Checking the count is valid or not
     * @return true or false
     */
	public boolean isValid() 
	{
		if (count == MAX_LENGTH)
			return true;
		return false;
	}
	
	/** Clears the focus, count and cardNumber */
	public void clear()
	{
		focus = 1;
		count = 0;		
		cardNumber = "";
	}
}
