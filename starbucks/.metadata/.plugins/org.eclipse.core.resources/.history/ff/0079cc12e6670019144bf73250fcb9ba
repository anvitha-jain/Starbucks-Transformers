

package starbucks;

import static org.junit.Assert.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class AdditionalTestCases
{

    IApp app ;

    public AdditionalTestCases()
    {
    }

    @Before
    public void setUp()
    {
        app = new AppAuthProxy() ;  
    }

   /** This function will test for invalid pin message */ 
    @Test
    public void MyTestCase1()
    {
        String[] lines ;
        assertEquals("PinScreen", app.screen());
        app.touch(1,5) ;
        app.touch(1,5) ;
        app.touch(1,5) ;
        app.touch(1,6) ;
        app.display() ;
        lines = app.screenContents().split("\n"); 
        assertEquals("Invalid Pin", lines[3].trim());
    }
    
    /** 
     * This function will test Backspace functionality on PinScreen 
     * Special case when user enters backspace as first digit
     */ 
    @Test
    public void MyTestCase2()
    {
        String[] lines ;
        assertEquals("PinScreen", app.screen());
        app.touch(3,8) ; //Backspace
        app.display() ;
        lines = app.screenContents().split("\n"); 
        assertEquals("[_][_][_][_]", lines[5].trim());
    }
    
    /** 
     * This function will test Empty Character functionality on PinScreen 
     */
    @Test
    public void MyTestCase3()
    {
        String[] lines ;
        assertEquals("PinScreen", app.screen());
        app.touch(1,5) ;
        app.touch(2,5) ;
        app.touch(3,5) ;
        app.touch(1,8);  //Empty Character
        app.display() ;
        lines = app.screenContents().split("\n"); 
        assertEquals("[*][*][*][_]", lines[5].trim());
    }
    
    /** Next should clear the screen if digits of card number less than 9 */
    @Test
    public void MyTestCase4()
    {
        String[] lines ;
        assertEquals("PinScreen", app.screen());
        app.touch(1,5) ;
        app.touch(2,5) ;
        app.touch(3,5) ;
        app.touch(1,6) ;
        app.execute("E") ; // Settings Page
        assertEquals("Settings", app.screen());
        app.touch(1,1) ; // Add New Card
        assertEquals("AddCard", app.screen());
        // Card Id digits
        app.touch(1,5); // 1
        app.touch(2,5); // 2
        app.touch(3,5); // 3
        app.touch(1,6); // 4
        app.touch(2,6); // 5
        app.touch(2,3); // focus on card code
        // check digit entry
        app.display() ;
        lines = app.screenContents().split("\n"); 
        assertEquals("[12345]", lines[4].trim());
        // add card - see balance
        app.next() ;    
        app.display() ;
        lines = app.screenContents().split("\n"); 
        assertEquals("[]", lines[4].trim());  
    }
    
    
    
    @Test
    public void MyTestCase12()
    {
        String[] lines ;
        assertEquals("PinScreen", app.screen());
        app.touch(1,5) ;  // 1
        app.touch(2,5) ;  // 2
        app.touch(3,5) ;  // 3
        app.touch(1,6) ;  // 4
        assertEquals("MyCards", app.screen());
        app.next();
        lines = app.screenContents().split("\n");  
        assertEquals("$0.0", lines[7].trim()); 
    }
    
    
    @After
    public void tearDown()
    {
    }
}
